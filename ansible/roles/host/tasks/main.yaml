- name: "Configure exclusive SSH access"
  register: sshd_config_change
  ansible.builtin.template:
    src: templates/allow_access_user.conf.j2
    dest: /etc/ssh/sshd_config.d/allow_access_user.conf
    mode: '0644'

- name: Restart ssh daemon
  when: sshd_config_change.changed
  ansible.builtin.service:
    name: sshd
    state: restarted

- name: "Log out everyone except the current user"
  ignore_errors: true # In case there is no process
  ansible.builtin.shell:
    cmd: "loginctl --no-legend list-users | grep -v {{ remote_user }} | cut -d' ' -f1 | xargs -I{} killall --user {} --wait"

- name: Turn off nonessential services
  ansible.builtin.service:
    name: "{{ item }}"
    state: stopped
  with_items:
    - containerd
    - docker
    - influxdb

#- name: "Ensure the working folder exists and it is writeable"
#  ansible.builtin.file:
#    path: "{{ item }}"
#    state: directory
#    mode: '0744'
#  with_items:
#    - "{{ project_sources_dir }}"
#    - "{{ test_results_dir }}"
#    - "{{ setcpulatency_dir }}"

- name: Copy source
  register: copied_setcpulatency
  ansible.builtin.copy:
    src: files/setcpulatency.c
    dest: "{{ setcpulatency_dir }}"

- name: Compile setcpulatency
  when: copied_setcpulatency.changed
  ansible.builtin.command: 
    cmd: gcc {{ setcpulatency_dir }}/setcpulatency.c -o {{ setcpulatency_dir }}/setcpulatency

- name: "Disable C-states using /dev/cpu_dma_latency"
  ansible.builtin.shell: "{{ setcpulatency_dir }}/setcpulatency {{ cpu_dma_latency_val }} &"

- name: "Set pstate driver to passive mode"
  ansible.builtin.lineinfile:
   path: /sys/devices/system/cpu/intel_pstate/status
   regexp: '^\w+$'
   line: 'passive'
   unsafe_writes: yes # this is needed since the /sys/ fs tree is _not_ a real device

- name: "Set userspace scaling driver policy"
  ansible.builtin.command: cpupower frequency-set --governor userspace

- name: "Pin CPU to nominal frequency"
  ansible.builtin.command: cpupower --cpu all frequency-set --freq 2593MHz

# - name: "Install jsrolon fork of fio-plot"
#   pip:
#     name: git+https://github.com/jsrolon/fio-plot.git

- name: "Checkout fio"
  ansible.builtin.git:
    repo: 'https://github.com/axboe/fio.git'
    dest: "{{ fio_source_dir }}"
    version: fio-3.30
    depth: 1
    update: no

- name: "Make fio"
  ansible.builtin.command:
    cmd: make
    creates: "{{ fio_source_dir }}/fio"
    chdir: "{{ fio_source_dir }}"

- name: "Checkout spdk"
  ansible.builtin.git:
    repo: 'https://github.com/spdk/spdk.git'
    dest: "{{ spdk_source_dir }}"
    recursive: yes
    version: v22.01
    depth: 1
    update: no

- name: "Configure spdk with fio plugin"
  register: spdk_reconfigured
  ansible.builtin.command:
    cmd: ./configure --with-fio={{ fio_source_dir }}
    creates: "{{ spdk_source_dir }}/test/common/build_config.sh"
    chdir: "{{ spdk_source_dir }}"

- name: "Make spdk"
  when: spdk_reconfigured.changed
  ansible.builtin.command:
    cmd: make
    chdir: "{{ spdk_source_dir }}"

# - name: "Run bench_fio with the corresponding ioengine/threads/etc and envvars configurations"

# - name: "Enable P-states"
#   ignore_errors: yes
#   ansible.builtin.lineinfile:
#     path: /sys/devices/system/cpu/intel_pstate/status
#     regexp: '^\w+$'
#     line: 'active'
#     unsafe_writes: yes

- name: "Enable C-states"
  register: setcpulatency_kill_result
  ansible.builtin.command: pkill -f 'setcpulatency'
  failed_when: setcpulatency_kill_result.rc > 1

# - name: "Revive stopped processes"

- name: "Allow everyone to SSH again"
  register: sshd_config_change
  ansible.builtin.file:
    path: /etc/ssh/sshd_config.d/allow_access_user.conf
    state: absent
